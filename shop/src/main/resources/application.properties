spring.application.name=shop
server.port=8182

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/etoile
spring.datasource.username=root
spring.datasource.password=1234

#ì¤íëë ì¿¼ë¦¬ë¥¼ ì½ìì ì¶ë ¥
spring.jpa.properties.hibernate.show_sql=true

#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
#ì½ìì°½ì ì¶ë ¥ëë ì¿¼ë¦¬ë¥¼ ê°ëì±ì´ ì¢ê² í¬ë§·í
spring.jpa.properties.hibernate.format_sql=true

#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

#데이터베이스 초기화 전략 // ctreat 시 테이블을 항상 삭제하고 다시 만듬. 요소들 삭제.
# none,ceate-drop 종료 시점에 테이블삭제. 등등 여러 개 있음.
# validate : 엔티티와 테이블의 정상 매핑을 체크
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#Live Reload 기능 활성화
spring.devtolls.liversload.enabled=true

#Thymeleaf cash 사용 중지
spring.thymeleaf.cache=false

# 파일 한 개당 최대 사이즈.
spring.servlet.mutipart.max-file-size=200MB
# 요청 당 최대 파일 크기.
spring.servlet.mutipart.max-request-size=2000MB
# 상품 이미지 업로드 경로.
itemImgLocation = F:/etoileImg/img
# 리소스 업로드 경로.
uploadPath=file:///F:/etoileImg/

# 쿼리를 실행하여 조회할 때 한 번에 읽을 수 있는 사이즈를 지정.
# join 을 할 때 in() 을 사용하여 필요한 것만 가져오도록 함.
spring.jpa.properties.hibernate.default_batch_fetch_size=1000